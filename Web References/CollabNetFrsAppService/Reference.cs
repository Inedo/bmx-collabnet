//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Inedo.BuildMasterExtensions.CollabNet.CollabNetFrsAppService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FrsAppSoapBinding", Namespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FrsFileSoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectSoapDO))]
    public partial class FrsAppSoapService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback createReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFrsFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPackageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReleaseDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFrsFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPackageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setReleaseDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPackageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReleaseListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrsFileIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FrsAppSoapService() {
            this.Url = "http://localhost:8080/ce-soap50/services/FrsApp";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createPackageCompletedEventHandler createPackageCompleted;
        
        /// <remarks/>
        public event createReleaseCompletedEventHandler createReleaseCompleted;
        
        /// <remarks/>
        public event createFrsFileCompletedEventHandler createFrsFileCompleted;
        
        /// <remarks/>
        public event getPackageDataCompletedEventHandler getPackageDataCompleted;
        
        /// <remarks/>
        public event getReleaseDataCompletedEventHandler getReleaseDataCompleted;
        
        /// <remarks/>
        public event getFrsFileDataCompletedEventHandler getFrsFileDataCompleted;
        
        /// <remarks/>
        public event deletePackageCompletedEventHandler deletePackageCompleted;
        
        /// <remarks/>
        public event deleteReleaseCompletedEventHandler deleteReleaseCompleted;
        
        /// <remarks/>
        public event deleteFrsFileCompletedEventHandler deleteFrsFileCompleted;
        
        /// <remarks/>
        public event setPackageDataCompletedEventHandler setPackageDataCompleted;
        
        /// <remarks/>
        public event setReleaseDataCompletedEventHandler setReleaseDataCompleted;
        
        /// <remarks/>
        public event getPackageListCompletedEventHandler getPackageListCompleted;
        
        /// <remarks/>
        public event getReleaseListCompletedEventHandler getReleaseListCompleted;
        
        /// <remarks/>
        public event getFrsFileListCompletedEventHandler getFrsFileListCompleted;
        
        /// <remarks/>
        public event getFrsFileIdCompletedEventHandler getFrsFileIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("createPackageReturn")]
        public PackageSoapDO createPackage(string sessionId, string projectId, string title, string description, bool isPublished) {
            object[] results = this.Invoke("createPackage", new object[] {
                        sessionId,
                        projectId,
                        title,
                        description,
                        isPublished});
            return ((PackageSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void createPackageAsync(string sessionId, string projectId, string title, string description, bool isPublished) {
            this.createPackageAsync(sessionId, projectId, title, description, isPublished, null);
        }
        
        /// <remarks/>
        public void createPackageAsync(string sessionId, string projectId, string title, string description, bool isPublished, object userState) {
            if ((this.createPackageOperationCompleted == null)) {
                this.createPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePackageOperationCompleted);
            }
            this.InvokeAsync("createPackage", new object[] {
                        sessionId,
                        projectId,
                        title,
                        description,
                        isPublished}, this.createPackageOperationCompleted, userState);
        }
        
        private void OncreatePackageOperationCompleted(object arg) {
            if ((this.createPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPackageCompleted(this, new createPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("createReleaseReturn")]
        public ReleaseSoapDO createRelease(string sessionId, string packageId, string title, string description, string status, string maturity) {
            object[] results = this.Invoke("createRelease", new object[] {
                        sessionId,
                        packageId,
                        title,
                        description,
                        status,
                        maturity});
            return ((ReleaseSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void createReleaseAsync(string sessionId, string packageId, string title, string description, string status, string maturity) {
            this.createReleaseAsync(sessionId, packageId, title, description, status, maturity, null);
        }
        
        /// <remarks/>
        public void createReleaseAsync(string sessionId, string packageId, string title, string description, string status, string maturity, object userState) {
            if ((this.createReleaseOperationCompleted == null)) {
                this.createReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateReleaseOperationCompleted);
            }
            this.InvokeAsync("createRelease", new object[] {
                        sessionId,
                        packageId,
                        title,
                        description,
                        status,
                        maturity}, this.createReleaseOperationCompleted, userState);
        }
        
        private void OncreateReleaseOperationCompleted(object arg) {
            if ((this.createReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createReleaseCompleted(this, new createReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("createFrsFileReturn")]
        public FrsFileSoapDO createFrsFile(string sessionId, string releaseId, string fileName, string mimeType, string fileId) {
            object[] results = this.Invoke("createFrsFile", new object[] {
                        sessionId,
                        releaseId,
                        fileName,
                        mimeType,
                        fileId});
            return ((FrsFileSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void createFrsFileAsync(string sessionId, string releaseId, string fileName, string mimeType, string fileId) {
            this.createFrsFileAsync(sessionId, releaseId, fileName, mimeType, fileId, null);
        }
        
        /// <remarks/>
        public void createFrsFileAsync(string sessionId, string releaseId, string fileName, string mimeType, string fileId, object userState) {
            if ((this.createFrsFileOperationCompleted == null)) {
                this.createFrsFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFrsFileOperationCompleted);
            }
            this.InvokeAsync("createFrsFile", new object[] {
                        sessionId,
                        releaseId,
                        fileName,
                        mimeType,
                        fileId}, this.createFrsFileOperationCompleted, userState);
        }
        
        private void OncreateFrsFileOperationCompleted(object arg) {
            if ((this.createFrsFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFrsFileCompleted(this, new createFrsFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPackageDataReturn")]
        public PackageSoapDO getPackageData(string sessionId, string packageId) {
            object[] results = this.Invoke("getPackageData", new object[] {
                        sessionId,
                        packageId});
            return ((PackageSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void getPackageDataAsync(string sessionId, string packageId) {
            this.getPackageDataAsync(sessionId, packageId, null);
        }
        
        /// <remarks/>
        public void getPackageDataAsync(string sessionId, string packageId, object userState) {
            if ((this.getPackageDataOperationCompleted == null)) {
                this.getPackageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPackageDataOperationCompleted);
            }
            this.InvokeAsync("getPackageData", new object[] {
                        sessionId,
                        packageId}, this.getPackageDataOperationCompleted, userState);
        }
        
        private void OngetPackageDataOperationCompleted(object arg) {
            if ((this.getPackageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPackageDataCompleted(this, new getPackageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReleaseDataReturn")]
        public ReleaseSoapDO getReleaseData(string sessionId, string releaseId) {
            object[] results = this.Invoke("getReleaseData", new object[] {
                        sessionId,
                        releaseId});
            return ((ReleaseSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void getReleaseDataAsync(string sessionId, string releaseId) {
            this.getReleaseDataAsync(sessionId, releaseId, null);
        }
        
        /// <remarks/>
        public void getReleaseDataAsync(string sessionId, string releaseId, object userState) {
            if ((this.getReleaseDataOperationCompleted == null)) {
                this.getReleaseDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReleaseDataOperationCompleted);
            }
            this.InvokeAsync("getReleaseData", new object[] {
                        sessionId,
                        releaseId}, this.getReleaseDataOperationCompleted, userState);
        }
        
        private void OngetReleaseDataOperationCompleted(object arg) {
            if ((this.getReleaseDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReleaseDataCompleted(this, new getReleaseDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsFileDataReturn")]
        public FrsFileSoapDO getFrsFileData(string sessionId, string frsFileId) {
            object[] results = this.Invoke("getFrsFileData", new object[] {
                        sessionId,
                        frsFileId});
            return ((FrsFileSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void getFrsFileDataAsync(string sessionId, string frsFileId) {
            this.getFrsFileDataAsync(sessionId, frsFileId, null);
        }
        
        /// <remarks/>
        public void getFrsFileDataAsync(string sessionId, string frsFileId, object userState) {
            if ((this.getFrsFileDataOperationCompleted == null)) {
                this.getFrsFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsFileDataOperationCompleted);
            }
            this.InvokeAsync("getFrsFileData", new object[] {
                        sessionId,
                        frsFileId}, this.getFrsFileDataOperationCompleted, userState);
        }
        
        private void OngetFrsFileDataOperationCompleted(object arg) {
            if ((this.getFrsFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsFileDataCompleted(this, new getFrsFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void deletePackage(string sessionId, string packageId) {
            this.Invoke("deletePackage", new object[] {
                        sessionId,
                        packageId});
        }
        
        /// <remarks/>
        public void deletePackageAsync(string sessionId, string packageId) {
            this.deletePackageAsync(sessionId, packageId, null);
        }
        
        /// <remarks/>
        public void deletePackageAsync(string sessionId, string packageId, object userState) {
            if ((this.deletePackageOperationCompleted == null)) {
                this.deletePackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePackageOperationCompleted);
            }
            this.InvokeAsync("deletePackage", new object[] {
                        sessionId,
                        packageId}, this.deletePackageOperationCompleted, userState);
        }
        
        private void OndeletePackageOperationCompleted(object arg) {
            if ((this.deletePackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void deleteRelease(string sessionId, string releaseId) {
            this.Invoke("deleteRelease", new object[] {
                        sessionId,
                        releaseId});
        }
        
        /// <remarks/>
        public void deleteReleaseAsync(string sessionId, string releaseId) {
            this.deleteReleaseAsync(sessionId, releaseId, null);
        }
        
        /// <remarks/>
        public void deleteReleaseAsync(string sessionId, string releaseId, object userState) {
            if ((this.deleteReleaseOperationCompleted == null)) {
                this.deleteReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteReleaseOperationCompleted);
            }
            this.InvokeAsync("deleteRelease", new object[] {
                        sessionId,
                        releaseId}, this.deleteReleaseOperationCompleted, userState);
        }
        
        private void OndeleteReleaseOperationCompleted(object arg) {
            if ((this.deleteReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteReleaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void deleteFrsFile(string sessionId, string frsFileId) {
            this.Invoke("deleteFrsFile", new object[] {
                        sessionId,
                        frsFileId});
        }
        
        /// <remarks/>
        public void deleteFrsFileAsync(string sessionId, string frsFileId) {
            this.deleteFrsFileAsync(sessionId, frsFileId, null);
        }
        
        /// <remarks/>
        public void deleteFrsFileAsync(string sessionId, string frsFileId, object userState) {
            if ((this.deleteFrsFileOperationCompleted == null)) {
                this.deleteFrsFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFrsFileOperationCompleted);
            }
            this.InvokeAsync("deleteFrsFile", new object[] {
                        sessionId,
                        frsFileId}, this.deleteFrsFileOperationCompleted, userState);
        }
        
        private void OndeleteFrsFileOperationCompleted(object arg) {
            if ((this.deleteFrsFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFrsFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void setPackageData(string sessionId, PackageSoapDO packageData) {
            this.Invoke("setPackageData", new object[] {
                        sessionId,
                        packageData});
        }
        
        /// <remarks/>
        public void setPackageDataAsync(string sessionId, PackageSoapDO packageData) {
            this.setPackageDataAsync(sessionId, packageData, null);
        }
        
        /// <remarks/>
        public void setPackageDataAsync(string sessionId, PackageSoapDO packageData, object userState) {
            if ((this.setPackageDataOperationCompleted == null)) {
                this.setPackageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPackageDataOperationCompleted);
            }
            this.InvokeAsync("setPackageData", new object[] {
                        sessionId,
                        packageData}, this.setPackageDataOperationCompleted, userState);
        }
        
        private void OnsetPackageDataOperationCompleted(object arg) {
            if ((this.setPackageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPackageDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void setReleaseData(string sessionId, ReleaseSoapDO releaseData) {
            this.Invoke("setReleaseData", new object[] {
                        sessionId,
                        releaseData});
        }
        
        /// <remarks/>
        public void setReleaseDataAsync(string sessionId, ReleaseSoapDO releaseData) {
            this.setReleaseDataAsync(sessionId, releaseData, null);
        }
        
        /// <remarks/>
        public void setReleaseDataAsync(string sessionId, ReleaseSoapDO releaseData, object userState) {
            if ((this.setReleaseDataOperationCompleted == null)) {
                this.setReleaseDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetReleaseDataOperationCompleted);
            }
            this.InvokeAsync("setReleaseData", new object[] {
                        sessionId,
                        releaseData}, this.setReleaseDataOperationCompleted, userState);
        }
        
        private void OnsetReleaseDataOperationCompleted(object arg) {
            if ((this.setReleaseDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setReleaseDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPackageListReturn")]
        public PackageSoapList getPackageList(string sessionId, string projectId) {
            object[] results = this.Invoke("getPackageList", new object[] {
                        sessionId,
                        projectId});
            return ((PackageSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getPackageListAsync(string sessionId, string projectId) {
            this.getPackageListAsync(sessionId, projectId, null);
        }
        
        /// <remarks/>
        public void getPackageListAsync(string sessionId, string projectId, object userState) {
            if ((this.getPackageListOperationCompleted == null)) {
                this.getPackageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPackageListOperationCompleted);
            }
            this.InvokeAsync("getPackageList", new object[] {
                        sessionId,
                        projectId}, this.getPackageListOperationCompleted, userState);
        }
        
        private void OngetPackageListOperationCompleted(object arg) {
            if ((this.getPackageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPackageListCompleted(this, new getPackageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReleaseListReturn")]
        public ReleaseSoapList getReleaseList(string sessionId, string packageId) {
            object[] results = this.Invoke("getReleaseList", new object[] {
                        sessionId,
                        packageId});
            return ((ReleaseSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getReleaseListAsync(string sessionId, string packageId) {
            this.getReleaseListAsync(sessionId, packageId, null);
        }
        
        /// <remarks/>
        public void getReleaseListAsync(string sessionId, string packageId, object userState) {
            if ((this.getReleaseListOperationCompleted == null)) {
                this.getReleaseListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReleaseListOperationCompleted);
            }
            this.InvokeAsync("getReleaseList", new object[] {
                        sessionId,
                        packageId}, this.getReleaseListOperationCompleted, userState);
        }
        
        private void OngetReleaseListOperationCompleted(object arg) {
            if ((this.getReleaseListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReleaseListCompleted(this, new getReleaseListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsFileListReturn")]
        public FrsFileSoapList getFrsFileList(string sessionId, string releaseId) {
            object[] results = this.Invoke("getFrsFileList", new object[] {
                        sessionId,
                        releaseId});
            return ((FrsFileSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getFrsFileListAsync(string sessionId, string releaseId) {
            this.getFrsFileListAsync(sessionId, releaseId, null);
        }
        
        /// <remarks/>
        public void getFrsFileListAsync(string sessionId, string releaseId, object userState) {
            if ((this.getFrsFileListOperationCompleted == null)) {
                this.getFrsFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsFileListOperationCompleted);
            }
            this.InvokeAsync("getFrsFileList", new object[] {
                        sessionId,
                        releaseId}, this.getFrsFileListOperationCompleted, userState);
        }
        
        private void OngetFrsFileListOperationCompleted(object arg) {
            if ((this.getFrsFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsFileListCompleted(this, new getFrsFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrsFileIdReturn")]
        public string getFrsFileId(string sessionId, string frsFileId) {
            object[] results = this.Invoke("getFrsFileId", new object[] {
                        sessionId,
                        frsFileId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFrsFileIdAsync(string sessionId, string frsFileId) {
            this.getFrsFileIdAsync(sessionId, frsFileId, null);
        }
        
        /// <remarks/>
        public void getFrsFileIdAsync(string sessionId, string frsFileId, object userState) {
            if ((this.getFrsFileIdOperationCompleted == null)) {
                this.getFrsFileIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrsFileIdOperationCompleted);
            }
            this.InvokeAsync("getFrsFileId", new object[] {
                        sessionId,
                        frsFileId}, this.getFrsFileIdOperationCompleted, userState);
        }
        
        private void OngetFrsFileIdOperationCompleted(object arg) {
            if ((this.getFrsFileIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrsFileIdCompleted(this, new getFrsFileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class PackageSoapDO : FolderSoapDO {
        
        private int downloadedField;
        
        private bool isPublishedField;
        
        /// <remarks/>
        public int downloaded {
            get {
                return this.downloadedField;
            }
            set {
                this.downloadedField = value;
            }
        }
        
        /// <remarks/>
        public bool isPublished {
            get {
                return this.isPublishedField;
            }
            set {
                this.isPublishedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ReleaseSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PackageSoapDO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public abstract partial class FolderSoapDO : ObjectSoapDO {
        
        private string descriptionField;
        
        private string parentFolderIdField;
        
        private string pathField;
        
        private string projectIdField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string parentFolderId {
            get {
                return this.parentFolderIdField;
            }
            set {
                this.parentFolderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FrsFileSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ReleaseSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PackageSoapDO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public abstract partial class ObjectSoapDO {
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private string idField;
        
        private string lastModifiedByField;
        
        private System.Nullable<System.DateTime> lastModifiedDateField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastModifiedBy {
            get {
                return this.lastModifiedByField;
            }
            set {
                this.lastModifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class FrsFileSoapRow {
        
        private string contentIdField;
        
        private System.Nullable<System.DateTime> dateCreatedField;
        
        private string descriptionField;
        
        private long fileSizeField;
        
        private string filenameField;
        
        private string folderPathStringField;
        
        private string idField;
        
        private string mimeTypeField;
        
        private string packageIdField;
        
        private string packageTitleField;
        
        private string projectIdField;
        
        private string projectPathStringField;
        
        private string projectTitleField;
        
        private string releaseIdField;
        
        private string releaseTitleField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string contentId {
            get {
                return this.contentIdField;
            }
            set {
                this.contentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderPathString {
            get {
                return this.folderPathStringField;
            }
            set {
                this.folderPathStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string packageId {
            get {
                return this.packageIdField;
            }
            set {
                this.packageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string packageTitle {
            get {
                return this.packageTitleField;
            }
            set {
                this.packageTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectPathString {
            get {
                return this.projectPathStringField;
            }
            set {
                this.projectPathStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectTitle {
            get {
                return this.projectTitleField;
            }
            set {
                this.projectTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string releaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string releaseTitle {
            get {
                return this.releaseTitleField;
            }
            set {
                this.releaseTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class FrsFileSoapList {
        
        private FrsFileSoapRow[] dataRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FrsFileSoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ReleaseSoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PackageSoapRow))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class FolderSoapRow {
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> createdOnField;
        
        private string descriptionField;
        
        private string idField;
        
        private string lastModifiedByField;
        
        private System.Nullable<System.DateTime> lastModifiedOnField;
        
        private string parentFolderIdField;
        
        private string pathField;
        
        private string projectIdField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastModifiedBy {
            get {
                return this.lastModifiedByField;
            }
            set {
                this.lastModifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastModifiedOn {
            get {
                return this.lastModifiedOnField;
            }
            set {
                this.lastModifiedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string parentFolderId {
            get {
                return this.parentFolderIdField;
            }
            set {
                this.parentFolderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ReleaseSoapRow : FolderSoapRow {
        
        private string maturityField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string maturity {
            get {
                return this.maturityField;
            }
            set {
                this.maturityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class PackageSoapRow : FolderSoapRow {
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ReleaseSoapList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PackageSoapList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public abstract partial class FolderSoapList {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ReleaseSoapList : FolderSoapList {
        
        private ReleaseSoapRow[] dataRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ReleaseSoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class PackageSoapList : FolderSoapList {
        
        private PackageSoapRow[] dataRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public PackageSoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FrsFileSoapDO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ItemSoapDO : ObjectSoapDO {
        
        private string folderIdField;
        
        private string pathField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class FrsFileSoapDO : ItemSoapDO {
        
        private string descriptionField;
        
        private string filenameField;
        
        private string mimeTypeField;
        
        private long sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        public long size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ReleaseSoapDO : FolderSoapDO {
        
        private int downloadedField;
        
        private string maturityField;
        
        private string statusField;
        
        /// <remarks/>
        public int downloaded {
            get {
                return this.downloadedField;
            }
            set {
                this.downloadedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string maturity {
            get {
                return this.maturityField;
            }
            set {
                this.maturityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createPackageCompletedEventHandler(object sender, createPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createReleaseCompletedEventHandler(object sender, createReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createFrsFileCompletedEventHandler(object sender, createFrsFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFrsFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFrsFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsFileSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsFileSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPackageDataCompletedEventHandler(object sender, getPackageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPackageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPackageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReleaseDataCompletedEventHandler(object sender, getReleaseDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReleaseDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReleaseDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFrsFileDataCompletedEventHandler(object sender, getFrsFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsFileSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsFileSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deletePackageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteReleaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteFrsFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setPackageDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setReleaseDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPackageListCompletedEventHandler(object sender, getPackageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPackageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPackageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReleaseListCompletedEventHandler(object sender, getReleaseListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReleaseListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReleaseListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReleaseSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReleaseSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFrsFileListCompletedEventHandler(object sender, getFrsFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrsFileSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrsFileSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFrsFileIdCompletedEventHandler(object sender, getFrsFileIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrsFileIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrsFileIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591