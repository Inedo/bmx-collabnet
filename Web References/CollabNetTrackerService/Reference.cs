//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18051.
// 
#pragma warning disable 1591

namespace Inedo.BuildMasterExtensions.CollabNet.CollabNetTrackerService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TrackerAppSoapBinding", Namespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(WorkflowTransitionSoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactDetailSoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapSortKey))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactSoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapFilter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactDependencySoapRow))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(WebServiceFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerFieldValueSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectSoapDO))]
    public partial class TrackerAppSoapService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyWorkflowTransitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createArtifactOperationCompleted;
        
        private System.Threading.SendOrPostCallback getArtifactDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setArtifactDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTrackerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDateFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteArtifactOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveArtifactOperationCompleted;
        
        private System.Threading.SendOrPostCallback getParentDependencyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChildDependencyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTrackerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTrackerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTextFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSingleSelectFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMultiSelectFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserSelectFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getArtifactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getArtifactDetailListOperationCompleted;
        
        private System.Threading.SendOrPostCallback findArtifactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllowedWorkflowTransitionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback createArtifactDependencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeArtifactDependencyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TrackerAppSoapService() {
            this.Url = "http://localhost:8080/ce-soap50/services/TrackerApp";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getFieldsCompletedEventHandler getFieldsCompleted;
        
        /// <remarks/>
        public event setFieldCompletedEventHandler setFieldCompleted;
        
        /// <remarks/>
        public event copyWorkflowTransitionsCompletedEventHandler copyWorkflowTransitionsCompleted;
        
        /// <remarks/>
        public event createArtifactCompletedEventHandler createArtifactCompleted;
        
        /// <remarks/>
        public event getArtifactDataCompletedEventHandler getArtifactDataCompleted;
        
        /// <remarks/>
        public event setArtifactDataCompletedEventHandler setArtifactDataCompleted;
        
        /// <remarks/>
        public event deleteFieldCompletedEventHandler deleteFieldCompleted;
        
        /// <remarks/>
        public event getTrackerDataCompletedEventHandler getTrackerDataCompleted;
        
        /// <remarks/>
        public event setTrackerDataCompletedEventHandler setTrackerDataCompleted;
        
        /// <remarks/>
        public event addDateFieldCompletedEventHandler addDateFieldCompleted;
        
        /// <remarks/>
        public event deleteArtifactCompletedEventHandler deleteArtifactCompleted;
        
        /// <remarks/>
        public event moveArtifactCompletedEventHandler moveArtifactCompleted;
        
        /// <remarks/>
        public event getParentDependencyListCompletedEventHandler getParentDependencyListCompleted;
        
        /// <remarks/>
        public event getChildDependencyListCompletedEventHandler getChildDependencyListCompleted;
        
        /// <remarks/>
        public event createTrackerCompletedEventHandler createTrackerCompleted;
        
        /// <remarks/>
        public event getTrackerListCompletedEventHandler getTrackerListCompleted;
        
        /// <remarks/>
        public event addTextFieldCompletedEventHandler addTextFieldCompleted;
        
        /// <remarks/>
        public event addSingleSelectFieldCompletedEventHandler addSingleSelectFieldCompleted;
        
        /// <remarks/>
        public event addMultiSelectFieldCompletedEventHandler addMultiSelectFieldCompleted;
        
        /// <remarks/>
        public event addUserSelectFieldCompletedEventHandler addUserSelectFieldCompleted;
        
        /// <remarks/>
        public event getArtifactListCompletedEventHandler getArtifactListCompleted;
        
        /// <remarks/>
        public event getArtifactDetailListCompletedEventHandler getArtifactDetailListCompleted;
        
        /// <remarks/>
        public event findArtifactsCompletedEventHandler findArtifactsCompleted;
        
        /// <remarks/>
        public event getAllowedWorkflowTransitionListCompletedEventHandler getAllowedWorkflowTransitionListCompleted;
        
        /// <remarks/>
        public event createArtifactDependencyCompletedEventHandler createArtifactDependencyCompleted;
        
        /// <remarks/>
        public event removeArtifactDependencyCompletedEventHandler removeArtifactDependencyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFieldsReturn")]
        public TrackerFieldSoapDO[] getFields(string sessionId, string trackerId) {
            object[] results = this.Invoke("getFields", new object[] {
                        sessionId,
                        trackerId});
            return ((TrackerFieldSoapDO[])(results[0]));
        }
        
        /// <remarks/>
        public void getFieldsAsync(string sessionId, string trackerId) {
            this.getFieldsAsync(sessionId, trackerId, null);
        }
        
        /// <remarks/>
        public void getFieldsAsync(string sessionId, string trackerId, object userState) {
            if ((this.getFieldsOperationCompleted == null)) {
                this.getFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFieldsOperationCompleted);
            }
            this.InvokeAsync("getFields", new object[] {
                        sessionId,
                        trackerId}, this.getFieldsOperationCompleted, userState);
        }
        
        private void OngetFieldsOperationCompleted(object arg) {
            if ((this.getFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFieldsCompleted(this, new getFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void setField(string sessionId, string objectId, TrackerFieldSoapDO fieldData) {
            this.Invoke("setField", new object[] {
                        sessionId,
                        objectId,
                        fieldData});
        }
        
        /// <remarks/>
        public void setFieldAsync(string sessionId, string objectId, TrackerFieldSoapDO fieldData) {
            this.setFieldAsync(sessionId, objectId, fieldData, null);
        }
        
        /// <remarks/>
        public void setFieldAsync(string sessionId, string objectId, TrackerFieldSoapDO fieldData, object userState) {
            if ((this.setFieldOperationCompleted == null)) {
                this.setFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFieldOperationCompleted);
            }
            this.InvokeAsync("setField", new object[] {
                        sessionId,
                        objectId,
                        fieldData}, this.setFieldOperationCompleted, userState);
        }
        
        private void OnsetFieldOperationCompleted(object arg) {
            if ((this.setFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void copyWorkflowTransitions(string sessionId, string srcTrackerId, string dstTrackerId) {
            this.Invoke("copyWorkflowTransitions", new object[] {
                        sessionId,
                        srcTrackerId,
                        dstTrackerId});
        }
        
        /// <remarks/>
        public void copyWorkflowTransitionsAsync(string sessionId, string srcTrackerId, string dstTrackerId) {
            this.copyWorkflowTransitionsAsync(sessionId, srcTrackerId, dstTrackerId, null);
        }
        
        /// <remarks/>
        public void copyWorkflowTransitionsAsync(string sessionId, string srcTrackerId, string dstTrackerId, object userState) {
            if ((this.copyWorkflowTransitionsOperationCompleted == null)) {
                this.copyWorkflowTransitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyWorkflowTransitionsOperationCompleted);
            }
            this.InvokeAsync("copyWorkflowTransitions", new object[] {
                        sessionId,
                        srcTrackerId,
                        dstTrackerId}, this.copyWorkflowTransitionsOperationCompleted, userState);
        }
        
        private void OncopyWorkflowTransitionsOperationCompleted(object arg) {
            if ((this.copyWorkflowTransitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyWorkflowTransitionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("createArtifactReturn")]
        public ArtifactSoapDO createArtifact(
                    string sessionId, 
                    string trackerId, 
                    string title, 
                    string description, 
                    string group, 
                    string category, 
                    string status, 
                    string customer, 
                    int priority, 
                    int estimatedHours, 
                    string assignedUsername, 
                    string releaseId, 
                    SoapFieldValues flexFields, 
                    string attachmentFileName, 
                    string attachmentMimeType, 
                    string attachmentFileId) {
            object[] results = this.Invoke("createArtifact", new object[] {
                        sessionId,
                        trackerId,
                        title,
                        description,
                        group,
                        category,
                        status,
                        customer,
                        priority,
                        estimatedHours,
                        assignedUsername,
                        releaseId,
                        flexFields,
                        attachmentFileName,
                        attachmentMimeType,
                        attachmentFileId});
            return ((ArtifactSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void createArtifactAsync(
                    string sessionId, 
                    string trackerId, 
                    string title, 
                    string description, 
                    string group, 
                    string category, 
                    string status, 
                    string customer, 
                    int priority, 
                    int estimatedHours, 
                    string assignedUsername, 
                    string releaseId, 
                    SoapFieldValues flexFields, 
                    string attachmentFileName, 
                    string attachmentMimeType, 
                    string attachmentFileId) {
            this.createArtifactAsync(sessionId, trackerId, title, description, group, category, status, customer, priority, estimatedHours, assignedUsername, releaseId, flexFields, attachmentFileName, attachmentMimeType, attachmentFileId, null);
        }
        
        /// <remarks/>
        public void createArtifactAsync(
                    string sessionId, 
                    string trackerId, 
                    string title, 
                    string description, 
                    string group, 
                    string category, 
                    string status, 
                    string customer, 
                    int priority, 
                    int estimatedHours, 
                    string assignedUsername, 
                    string releaseId, 
                    SoapFieldValues flexFields, 
                    string attachmentFileName, 
                    string attachmentMimeType, 
                    string attachmentFileId, 
                    object userState) {
            if ((this.createArtifactOperationCompleted == null)) {
                this.createArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateArtifactOperationCompleted);
            }
            this.InvokeAsync("createArtifact", new object[] {
                        sessionId,
                        trackerId,
                        title,
                        description,
                        group,
                        category,
                        status,
                        customer,
                        priority,
                        estimatedHours,
                        assignedUsername,
                        releaseId,
                        flexFields,
                        attachmentFileName,
                        attachmentMimeType,
                        attachmentFileId}, this.createArtifactOperationCompleted, userState);
        }
        
        private void OncreateArtifactOperationCompleted(object arg) {
            if ((this.createArtifactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createArtifactCompleted(this, new createArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getArtifactDataReturn")]
        public ArtifactSoapDO getArtifactData(string sessionId, string artifactId) {
            object[] results = this.Invoke("getArtifactData", new object[] {
                        sessionId,
                        artifactId});
            return ((ArtifactSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void getArtifactDataAsync(string sessionId, string artifactId) {
            this.getArtifactDataAsync(sessionId, artifactId, null);
        }
        
        /// <remarks/>
        public void getArtifactDataAsync(string sessionId, string artifactId, object userState) {
            if ((this.getArtifactDataOperationCompleted == null)) {
                this.getArtifactDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactDataOperationCompleted);
            }
            this.InvokeAsync("getArtifactData", new object[] {
                        sessionId,
                        artifactId}, this.getArtifactDataOperationCompleted, userState);
        }
        
        private void OngetArtifactDataOperationCompleted(object arg) {
            if ((this.getArtifactDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getArtifactDataCompleted(this, new getArtifactDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void setArtifactData(string sessionId, ArtifactSoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
            this.Invoke("setArtifactData", new object[] {
                        sessionId,
                        artifactData,
                        comment,
                        attachmentFileName,
                        attachmentMimeType,
                        attachmentFileId});
        }
        
        /// <remarks/>
        public void setArtifactDataAsync(string sessionId, ArtifactSoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
            this.setArtifactDataAsync(sessionId, artifactData, comment, attachmentFileName, attachmentMimeType, attachmentFileId, null);
        }
        
        /// <remarks/>
        public void setArtifactDataAsync(string sessionId, ArtifactSoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId, object userState) {
            if ((this.setArtifactDataOperationCompleted == null)) {
                this.setArtifactDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetArtifactDataOperationCompleted);
            }
            this.InvokeAsync("setArtifactData", new object[] {
                        sessionId,
                        artifactData,
                        comment,
                        attachmentFileName,
                        attachmentMimeType,
                        attachmentFileId}, this.setArtifactDataOperationCompleted, userState);
        }
        
        private void OnsetArtifactDataOperationCompleted(object arg) {
            if ((this.setArtifactDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setArtifactDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void deleteField(string sessionId, string objectId, string fieldId) {
            this.Invoke("deleteField", new object[] {
                        sessionId,
                        objectId,
                        fieldId});
        }
        
        /// <remarks/>
        public void deleteFieldAsync(string sessionId, string objectId, string fieldId) {
            this.deleteFieldAsync(sessionId, objectId, fieldId, null);
        }
        
        /// <remarks/>
        public void deleteFieldAsync(string sessionId, string objectId, string fieldId, object userState) {
            if ((this.deleteFieldOperationCompleted == null)) {
                this.deleteFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFieldOperationCompleted);
            }
            this.InvokeAsync("deleteField", new object[] {
                        sessionId,
                        objectId,
                        fieldId}, this.deleteFieldOperationCompleted, userState);
        }
        
        private void OndeleteFieldOperationCompleted(object arg) {
            if ((this.deleteFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerDataReturn")]
        public TrackerSoapDO getTrackerData(string sessionId, string trackerId) {
            object[] results = this.Invoke("getTrackerData", new object[] {
                        sessionId,
                        trackerId});
            return ((TrackerSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerDataAsync(string sessionId, string trackerId) {
            this.getTrackerDataAsync(sessionId, trackerId, null);
        }
        
        /// <remarks/>
        public void getTrackerDataAsync(string sessionId, string trackerId, object userState) {
            if ((this.getTrackerDataOperationCompleted == null)) {
                this.getTrackerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerDataOperationCompleted);
            }
            this.InvokeAsync("getTrackerData", new object[] {
                        sessionId,
                        trackerId}, this.getTrackerDataOperationCompleted, userState);
        }
        
        private void OngetTrackerDataOperationCompleted(object arg) {
            if ((this.getTrackerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerDataCompleted(this, new getTrackerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void setTrackerData(string sessionId, TrackerSoapDO trackerData) {
            this.Invoke("setTrackerData", new object[] {
                        sessionId,
                        trackerData});
        }
        
        /// <remarks/>
        public void setTrackerDataAsync(string sessionId, TrackerSoapDO trackerData) {
            this.setTrackerDataAsync(sessionId, trackerData, null);
        }
        
        /// <remarks/>
        public void setTrackerDataAsync(string sessionId, TrackerSoapDO trackerData, object userState) {
            if ((this.setTrackerDataOperationCompleted == null)) {
                this.setTrackerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTrackerDataOperationCompleted);
            }
            this.InvokeAsync("setTrackerData", new object[] {
                        sessionId,
                        trackerData}, this.setTrackerDataOperationCompleted, userState);
        }
        
        private void OnsetTrackerDataOperationCompleted(object arg) {
            if ((this.setTrackerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTrackerDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void addDateField(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate) {
            this.Invoke("addDateField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate});
        }
        
        /// <remarks/>
        public void addDateFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate) {
            this.addDateFieldAsync(sessionId, trackerId, fieldName, isRequired, isDisabled, isHiddenOnCreate, null);
        }
        
        /// <remarks/>
        public void addDateFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, object userState) {
            if ((this.addDateFieldOperationCompleted == null)) {
                this.addDateFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDateFieldOperationCompleted);
            }
            this.InvokeAsync("addDateField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate}, this.addDateFieldOperationCompleted, userState);
        }
        
        private void OnaddDateFieldOperationCompleted(object arg) {
            if ((this.addDateFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDateFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void deleteArtifact(string sessionId, string artifactId) {
            this.Invoke("deleteArtifact", new object[] {
                        sessionId,
                        artifactId});
        }
        
        /// <remarks/>
        public void deleteArtifactAsync(string sessionId, string artifactId) {
            this.deleteArtifactAsync(sessionId, artifactId, null);
        }
        
        /// <remarks/>
        public void deleteArtifactAsync(string sessionId, string artifactId, object userState) {
            if ((this.deleteArtifactOperationCompleted == null)) {
                this.deleteArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteArtifactOperationCompleted);
            }
            this.InvokeAsync("deleteArtifact", new object[] {
                        sessionId,
                        artifactId}, this.deleteArtifactOperationCompleted, userState);
        }
        
        private void OndeleteArtifactOperationCompleted(object arg) {
            if ((this.deleteArtifactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteArtifactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("moveArtifactReturn")]
        public ArtifactSoapDO moveArtifact(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
            object[] results = this.Invoke("moveArtifact", new object[] {
                        sessionId,
                        artifactId,
                        targetFolderId,
                        newAssignee});
            return ((ArtifactSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void moveArtifactAsync(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
            this.moveArtifactAsync(sessionId, artifactId, targetFolderId, newAssignee, null);
        }
        
        /// <remarks/>
        public void moveArtifactAsync(string sessionId, string artifactId, string targetFolderId, string newAssignee, object userState) {
            if ((this.moveArtifactOperationCompleted == null)) {
                this.moveArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveArtifactOperationCompleted);
            }
            this.InvokeAsync("moveArtifact", new object[] {
                        sessionId,
                        artifactId,
                        targetFolderId,
                        newAssignee}, this.moveArtifactOperationCompleted, userState);
        }
        
        private void OnmoveArtifactOperationCompleted(object arg) {
            if ((this.moveArtifactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveArtifactCompleted(this, new moveArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getParentDependencyListReturn")]
        public ArtifactDependencySoapList getParentDependencyList(string sessionId, string artifactId) {
            object[] results = this.Invoke("getParentDependencyList", new object[] {
                        sessionId,
                        artifactId});
            return ((ArtifactDependencySoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getParentDependencyListAsync(string sessionId, string artifactId) {
            this.getParentDependencyListAsync(sessionId, artifactId, null);
        }
        
        /// <remarks/>
        public void getParentDependencyListAsync(string sessionId, string artifactId, object userState) {
            if ((this.getParentDependencyListOperationCompleted == null)) {
                this.getParentDependencyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParentDependencyListOperationCompleted);
            }
            this.InvokeAsync("getParentDependencyList", new object[] {
                        sessionId,
                        artifactId}, this.getParentDependencyListOperationCompleted, userState);
        }
        
        private void OngetParentDependencyListOperationCompleted(object arg) {
            if ((this.getParentDependencyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getParentDependencyListCompleted(this, new getParentDependencyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getChildDependencyListReturn")]
        public ArtifactDependencySoapList getChildDependencyList(string sessionId, string artifactId) {
            object[] results = this.Invoke("getChildDependencyList", new object[] {
                        sessionId,
                        artifactId});
            return ((ArtifactDependencySoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getChildDependencyListAsync(string sessionId, string artifactId) {
            this.getChildDependencyListAsync(sessionId, artifactId, null);
        }
        
        /// <remarks/>
        public void getChildDependencyListAsync(string sessionId, string artifactId, object userState) {
            if ((this.getChildDependencyListOperationCompleted == null)) {
                this.getChildDependencyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildDependencyListOperationCompleted);
            }
            this.InvokeAsync("getChildDependencyList", new object[] {
                        sessionId,
                        artifactId}, this.getChildDependencyListOperationCompleted, userState);
        }
        
        private void OngetChildDependencyListOperationCompleted(object arg) {
            if ((this.getChildDependencyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildDependencyListCompleted(this, new getChildDependencyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("createTrackerReturn")]
        public TrackerSoapDO createTracker(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription) {
            object[] results = this.Invoke("createTracker", new object[] {
                        sessionId,
                        projectId,
                        trackerName,
                        trackerTitle,
                        trackerDescription});
            return ((TrackerSoapDO)(results[0]));
        }
        
        /// <remarks/>
        public void createTrackerAsync(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription) {
            this.createTrackerAsync(sessionId, projectId, trackerName, trackerTitle, trackerDescription, null);
        }
        
        /// <remarks/>
        public void createTrackerAsync(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription, object userState) {
            if ((this.createTrackerOperationCompleted == null)) {
                this.createTrackerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTrackerOperationCompleted);
            }
            this.InvokeAsync("createTracker", new object[] {
                        sessionId,
                        projectId,
                        trackerName,
                        trackerTitle,
                        trackerDescription}, this.createTrackerOperationCompleted, userState);
        }
        
        private void OncreateTrackerOperationCompleted(object arg) {
            if ((this.createTrackerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTrackerCompleted(this, new createTrackerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTrackerListReturn")]
        public TrackerSoapList getTrackerList(string sessionId, string projectId) {
            object[] results = this.Invoke("getTrackerList", new object[] {
                        sessionId,
                        projectId});
            return ((TrackerSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getTrackerListAsync(string sessionId, string projectId) {
            this.getTrackerListAsync(sessionId, projectId, null);
        }
        
        /// <remarks/>
        public void getTrackerListAsync(string sessionId, string projectId, object userState) {
            if ((this.getTrackerListOperationCompleted == null)) {
                this.getTrackerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerListOperationCompleted);
            }
            this.InvokeAsync("getTrackerList", new object[] {
                        sessionId,
                        projectId}, this.getTrackerListOperationCompleted, userState);
        }
        
        private void OngetTrackerListOperationCompleted(object arg) {
            if ((this.getTrackerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrackerListCompleted(this, new getTrackerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void addTextField(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue) {
            this.Invoke("addTextField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        displayColumns,
                        displayLines,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        defaultValue});
        }
        
        /// <remarks/>
        public void addTextFieldAsync(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue) {
            this.addTextFieldAsync(sessionId, trackerId, fieldName, displayColumns, displayLines, isRequired, isDisabled, isHiddenOnCreate, defaultValue, null);
        }
        
        /// <remarks/>
        public void addTextFieldAsync(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue, object userState) {
            if ((this.addTextFieldOperationCompleted == null)) {
                this.addTextFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTextFieldOperationCompleted);
            }
            this.InvokeAsync("addTextField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        displayColumns,
                        displayLines,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        defaultValue}, this.addTextFieldOperationCompleted, userState);
        }
        
        private void OnaddTextFieldOperationCompleted(object arg) {
            if ((this.addTextFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTextFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void addSingleSelectField(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue) {
            this.Invoke("addSingleSelectField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        fieldValues,
                        defaultValue});
        }
        
        /// <remarks/>
        public void addSingleSelectFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue) {
            this.addSingleSelectFieldAsync(sessionId, trackerId, fieldName, isRequired, isDisabled, isHiddenOnCreate, fieldValues, defaultValue, null);
        }
        
        /// <remarks/>
        public void addSingleSelectFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue, object userState) {
            if ((this.addSingleSelectFieldOperationCompleted == null)) {
                this.addSingleSelectFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSingleSelectFieldOperationCompleted);
            }
            this.InvokeAsync("addSingleSelectField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        fieldValues,
                        defaultValue}, this.addSingleSelectFieldOperationCompleted, userState);
        }
        
        private void OnaddSingleSelectFieldOperationCompleted(object arg) {
            if ((this.addSingleSelectFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSingleSelectFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void addMultiSelectField(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues) {
            this.Invoke("addMultiSelectField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        displayLines,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        fieldValues,
                        defaultValues});
        }
        
        /// <remarks/>
        public void addMultiSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues) {
            this.addMultiSelectFieldAsync(sessionId, trackerId, fieldName, displayLines, isRequired, isDisabled, isHiddenOnCreate, fieldValues, defaultValues, null);
        }
        
        /// <remarks/>
        public void addMultiSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues, object userState) {
            if ((this.addMultiSelectFieldOperationCompleted == null)) {
                this.addMultiSelectFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMultiSelectFieldOperationCompleted);
            }
            this.InvokeAsync("addMultiSelectField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        displayLines,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        fieldValues,
                        defaultValues}, this.addMultiSelectFieldOperationCompleted, userState);
        }
        
        private void OnaddMultiSelectFieldOperationCompleted(object arg) {
            if ((this.addMultiSelectFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMultiSelectFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void addUserSelectField(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter) {
            this.Invoke("addUserSelectField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        displayLines,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        defaultValues,
                        userFilter});
        }
        
        /// <remarks/>
        public void addUserSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter) {
            this.addUserSelectFieldAsync(sessionId, trackerId, fieldName, displayLines, isRequired, isDisabled, isHiddenOnCreate, defaultValues, userFilter, null);
        }
        
        /// <remarks/>
        public void addUserSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter, object userState) {
            if ((this.addUserSelectFieldOperationCompleted == null)) {
                this.addUserSelectFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserSelectFieldOperationCompleted);
            }
            this.InvokeAsync("addUserSelectField", new object[] {
                        sessionId,
                        trackerId,
                        fieldName,
                        displayLines,
                        isRequired,
                        isDisabled,
                        isHiddenOnCreate,
                        defaultValues,
                        userFilter}, this.addUserSelectFieldOperationCompleted, userState);
        }
        
        private void OnaddUserSelectFieldOperationCompleted(object arg) {
            if ((this.addUserSelectFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserSelectFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getArtifactListReturn")]
        public ArtifactSoapList getArtifactList(string sessionId, string containerId, SoapFilter[] filters) {
            object[] results = this.Invoke("getArtifactList", new object[] {
                        sessionId,
                        containerId,
                        filters});
            return ((ArtifactSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getArtifactListAsync(string sessionId, string containerId, SoapFilter[] filters) {
            this.getArtifactListAsync(sessionId, containerId, filters, null);
        }
        
        /// <remarks/>
        public void getArtifactListAsync(string sessionId, string containerId, SoapFilter[] filters, object userState) {
            if ((this.getArtifactListOperationCompleted == null)) {
                this.getArtifactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactListOperationCompleted);
            }
            this.InvokeAsync("getArtifactList", new object[] {
                        sessionId,
                        containerId,
                        filters}, this.getArtifactListOperationCompleted, userState);
        }
        
        private void OngetArtifactListOperationCompleted(object arg) {
            if ((this.getArtifactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getArtifactListCompleted(this, new getArtifactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getArtifactDetailListReturn")]
        public ArtifactDetailSoapList getArtifactDetailList(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
            object[] results = this.Invoke("getArtifactDetailList", new object[] {
                        sessionId,
                        trackerId,
                        selectedColumns,
                        filters,
                        sortKeys,
                        startIndex,
                        maxRows,
                        exceptionIfExpiredCache,
                        forceNewQuery});
            return ((ArtifactDetailSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getArtifactDetailListAsync(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
            this.getArtifactDetailListAsync(sessionId, trackerId, selectedColumns, filters, sortKeys, startIndex, maxRows, exceptionIfExpiredCache, forceNewQuery, null);
        }
        
        /// <remarks/>
        public void getArtifactDetailListAsync(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery, object userState) {
            if ((this.getArtifactDetailListOperationCompleted == null)) {
                this.getArtifactDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactDetailListOperationCompleted);
            }
            this.InvokeAsync("getArtifactDetailList", new object[] {
                        sessionId,
                        trackerId,
                        selectedColumns,
                        filters,
                        sortKeys,
                        startIndex,
                        maxRows,
                        exceptionIfExpiredCache,
                        forceNewQuery}, this.getArtifactDetailListOperationCompleted, userState);
        }
        
        private void OngetArtifactDetailListOperationCompleted(object arg) {
            if ((this.getArtifactDetailListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getArtifactDetailListCompleted(this, new getArtifactDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("findArtifactsReturn")]
        public ArtifactSoapList findArtifacts(string sessionId, string queryString, string projectId, bool searchAttachments) {
            object[] results = this.Invoke("findArtifacts", new object[] {
                        sessionId,
                        queryString,
                        projectId,
                        searchAttachments});
            return ((ArtifactSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void findArtifactsAsync(string sessionId, string queryString, string projectId, bool searchAttachments) {
            this.findArtifactsAsync(sessionId, queryString, projectId, searchAttachments, null);
        }
        
        /// <remarks/>
        public void findArtifactsAsync(string sessionId, string queryString, string projectId, bool searchAttachments, object userState) {
            if ((this.findArtifactsOperationCompleted == null)) {
                this.findArtifactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindArtifactsOperationCompleted);
            }
            this.InvokeAsync("findArtifacts", new object[] {
                        sessionId,
                        queryString,
                        projectId,
                        searchAttachments}, this.findArtifactsOperationCompleted, userState);
        }
        
        private void OnfindArtifactsOperationCompleted(object arg) {
            if ((this.findArtifactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findArtifactsCompleted(this, new findArtifactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllowedWorkflowTransitionListReturn")]
        public WorkflowTransitionSoapList getAllowedWorkflowTransitionList(string sessionId, string trackerId) {
            object[] results = this.Invoke("getAllowedWorkflowTransitionList", new object[] {
                        sessionId,
                        trackerId});
            return ((WorkflowTransitionSoapList)(results[0]));
        }
        
        /// <remarks/>
        public void getAllowedWorkflowTransitionListAsync(string sessionId, string trackerId) {
            this.getAllowedWorkflowTransitionListAsync(sessionId, trackerId, null);
        }
        
        /// <remarks/>
        public void getAllowedWorkflowTransitionListAsync(string sessionId, string trackerId, object userState) {
            if ((this.getAllowedWorkflowTransitionListOperationCompleted == null)) {
                this.getAllowedWorkflowTransitionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllowedWorkflowTransitionListOperationCompleted);
            }
            this.InvokeAsync("getAllowedWorkflowTransitionList", new object[] {
                        sessionId,
                        trackerId}, this.getAllowedWorkflowTransitionListOperationCompleted, userState);
        }
        
        private void OngetAllowedWorkflowTransitionListOperationCompleted(object arg) {
            if ((this.getAllowedWorkflowTransitionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllowedWorkflowTransitionListCompleted(this, new getAllowedWorkflowTransitionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void createArtifactDependency(string sessionId, string originId, string targetId, string desc) {
            this.Invoke("createArtifactDependency", new object[] {
                        sessionId,
                        originId,
                        targetId,
                        desc});
        }
        
        /// <remarks/>
        public void createArtifactDependencyAsync(string sessionId, string originId, string targetId, string desc) {
            this.createArtifactDependencyAsync(sessionId, originId, targetId, desc, null);
        }
        
        /// <remarks/>
        public void createArtifactDependencyAsync(string sessionId, string originId, string targetId, string desc, object userState) {
            if ((this.createArtifactDependencyOperationCompleted == null)) {
                this.createArtifactDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateArtifactDependencyOperationCompleted);
            }
            this.InvokeAsync("createArtifactDependency", new object[] {
                        sessionId,
                        originId,
                        targetId,
                        desc}, this.createArtifactDependencyOperationCompleted, userState);
        }
        
        private void OncreateArtifactDependencyOperationCompleted(object arg) {
            if ((this.createArtifactDependencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createArtifactDependencyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
        public void removeArtifactDependency(string sessionId, string originId, string targetId) {
            this.Invoke("removeArtifactDependency", new object[] {
                        sessionId,
                        originId,
                        targetId});
        }
        
        /// <remarks/>
        public void removeArtifactDependencyAsync(string sessionId, string originId, string targetId) {
            this.removeArtifactDependencyAsync(sessionId, originId, targetId, null);
        }
        
        /// <remarks/>
        public void removeArtifactDependencyAsync(string sessionId, string originId, string targetId, object userState) {
            if ((this.removeArtifactDependencyOperationCompleted == null)) {
                this.removeArtifactDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveArtifactDependencyOperationCompleted);
            }
            this.InvokeAsync("removeArtifactDependency", new object[] {
                        sessionId,
                        originId,
                        targetId}, this.removeArtifactDependencyOperationCompleted, userState);
        }
        
        private void OnremoveArtifactDependencyOperationCompleted(object arg) {
            if ((this.removeArtifactDependencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeArtifactDependencyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class TrackerFieldSoapDO : ObjectSoapDO {
        
        private string defaultTextValueField;
        
        private string[] defaultUsernamesField;
        
        private bool disabledField;
        
        private int displayLinesField;
        
        private int displaySizeField;
        
        private string fieldTypeField;
        
        private TrackerFieldValueSoapDO[] fieldValuesField;
        
        private bool hiddenOnCreateField;
        
        private string nameField;
        
        private bool requiredField;
        
        private string userFilterField;
        
        private string valueTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string defaultTextValue {
            get {
                return this.defaultTextValueField;
            }
            set {
                this.defaultTextValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] defaultUsernames {
            get {
                return this.defaultUsernamesField;
            }
            set {
                this.defaultUsernamesField = value;
            }
        }
        
        /// <remarks/>
        public bool disabled {
            get {
                return this.disabledField;
            }
            set {
                this.disabledField = value;
            }
        }
        
        /// <remarks/>
        public int displayLines {
            get {
                return this.displayLinesField;
            }
            set {
                this.displayLinesField = value;
            }
        }
        
        /// <remarks/>
        public int displaySize {
            get {
                return this.displaySizeField;
            }
            set {
                this.displaySizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string fieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public TrackerFieldValueSoapDO[] fieldValues {
            get {
                return this.fieldValuesField;
            }
            set {
                this.fieldValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool hiddenOnCreate {
            get {
                return this.hiddenOnCreateField;
            }
            set {
                this.hiddenOnCreateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string userFilter {
            get {
                return this.userFilterField;
            }
            set {
                this.userFilterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string valueType {
            get {
                return this.valueTypeField;
            }
            set {
                this.valueTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class TrackerFieldValueSoapDO {
        
        private string idField;
        
        private bool isDefaultField;
        
        private string valueField;
        
        private string valueClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string valueClass {
            get {
                return this.valueClassField;
            }
            set {
                this.valueClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class WorkflowTransitionSoapList {
        
        private WorkflowTransitionSoapRow[] dataRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public WorkflowTransitionSoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class WorkflowTransitionSoapRow {
        
        private System.Nullable<int> displayOrderField;
        
        private string fromStatusNameField;
        
        private string[] requiredFieldsField;
        
        private string toStatusNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> displayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string fromStatusName {
            get {
                return this.fromStatusNameField;
            }
            set {
                this.fromStatusNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] requiredFields {
            get {
                return this.requiredFieldsField;
            }
            set {
                this.requiredFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string toStatusName {
            get {
                return this.toStatusNameField;
            }
            set {
                this.toStatusNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ArtifactDetailSoapList {
        
        private ArtifactDetailSoapRow[] dataRowsField;
        
        private int fullListSizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ArtifactDetailSoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
        
        /// <remarks/>
        public int fullListSize {
            get {
                return this.fullListSizeField;
            }
            set {
                this.fullListSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ArtifactDetailSoapRow {
        
        private int actualHoursField;
        
        private string artifactGroupField;
        
        private string assignedToFullnameField;
        
        private string assignedToUsernameField;
        
        private string categoryField;
        
        private System.Nullable<System.DateTime> closeDateField;
        
        private string customerField;
        
        private string descriptionField;
        
        private int estimatedHoursField;
        
        private SoapFieldValues flexFieldsField;
        
        private string folderIdField;
        
        private string folderPathStringField;
        
        private string folderTitleField;
        
        private string idField;
        
        private System.Nullable<System.DateTime> lastModifiedDateField;
        
        private int priorityField;
        
        private string projectIdField;
        
        private string projectPathStringField;
        
        private string projectTitleField;
        
        private string reportedInReleaseTitleField;
        
        private string resolvedInReleaseTitleField;
        
        private string statusField;
        
        private string statusClassField;
        
        private string submittedByFullnameField;
        
        private string submittedByUsernameField;
        
        private System.Nullable<System.DateTime> submittedDateField;
        
        private string titleField;
        
        private int versionField;
        
        /// <remarks/>
        public int actualHours {
            get {
                return this.actualHoursField;
            }
            set {
                this.actualHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string artifactGroup {
            get {
                return this.artifactGroupField;
            }
            set {
                this.artifactGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assignedToFullname {
            get {
                return this.assignedToFullnameField;
            }
            set {
                this.assignedToFullnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assignedToUsername {
            get {
                return this.assignedToUsernameField;
            }
            set {
                this.assignedToUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> closeDate {
            get {
                return this.closeDateField;
            }
            set {
                this.closeDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int estimatedHours {
            get {
                return this.estimatedHoursField;
            }
            set {
                this.estimatedHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SoapFieldValues flexFields {
            get {
                return this.flexFieldsField;
            }
            set {
                this.flexFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderPathString {
            get {
                return this.folderPathStringField;
            }
            set {
                this.folderPathStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderTitle {
            get {
                return this.folderTitleField;
            }
            set {
                this.folderTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectPathString {
            get {
                return this.projectPathStringField;
            }
            set {
                this.projectPathStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectTitle {
            get {
                return this.projectTitleField;
            }
            set {
                this.projectTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string reportedInReleaseTitle {
            get {
                return this.reportedInReleaseTitleField;
            }
            set {
                this.reportedInReleaseTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string resolvedInReleaseTitle {
            get {
                return this.resolvedInReleaseTitleField;
            }
            set {
                this.resolvedInReleaseTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string statusClass {
            get {
                return this.statusClassField;
            }
            set {
                this.statusClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string submittedByFullname {
            get {
                return this.submittedByFullnameField;
            }
            set {
                this.submittedByFullnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string submittedByUsername {
            get {
                return this.submittedByUsernameField;
            }
            set {
                this.submittedByUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> submittedDate {
            get {
                return this.submittedDateField;
            }
            set {
                this.submittedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class SoapFieldValues {
        
        private string[] namesField;
        
        private string[] typesField;
        
        private object[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] names {
            get {
                return this.namesField;
            }
            set {
                this.namesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class SoapSortKey {
        
        private bool ascendingField;
        
        private string nameField;
        
        /// <remarks/>
        public bool ascending {
            get {
                return this.ascendingField;
            }
            set {
                this.ascendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ArtifactSoapList {
        
        private ArtifactSoapRow[] dataRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ArtifactSoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ArtifactSoapRow {
        
        private int actualHoursField;
        
        private string artifactGroupField;
        
        private string assignedToFullnameField;
        
        private string assignedToUsernameField;
        
        private string categoryField;
        
        private System.Nullable<System.DateTime> closeDateField;
        
        private string customerField;
        
        private string descriptionField;
        
        private int estimatedHoursField;
        
        private string folderIdField;
        
        private string folderPathStringField;
        
        private string folderTitleField;
        
        private string idField;
        
        private System.Nullable<System.DateTime> lastModifiedDateField;
        
        private int priorityField;
        
        private string projectIdField;
        
        private string projectPathStringField;
        
        private string projectTitleField;
        
        private string statusField;
        
        private string statusClassField;
        
        private string submittedByFullnameField;
        
        private string submittedByUsernameField;
        
        private System.Nullable<System.DateTime> submittedDateField;
        
        private string titleField;
        
        /// <remarks/>
        public int actualHours {
            get {
                return this.actualHoursField;
            }
            set {
                this.actualHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string artifactGroup {
            get {
                return this.artifactGroupField;
            }
            set {
                this.artifactGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assignedToFullname {
            get {
                return this.assignedToFullnameField;
            }
            set {
                this.assignedToFullnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assignedToUsername {
            get {
                return this.assignedToUsernameField;
            }
            set {
                this.assignedToUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> closeDate {
            get {
                return this.closeDateField;
            }
            set {
                this.closeDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int estimatedHours {
            get {
                return this.estimatedHoursField;
            }
            set {
                this.estimatedHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderPathString {
            get {
                return this.folderPathStringField;
            }
            set {
                this.folderPathStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderTitle {
            get {
                return this.folderTitleField;
            }
            set {
                this.folderTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectPathString {
            get {
                return this.projectPathStringField;
            }
            set {
                this.projectPathStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectTitle {
            get {
                return this.projectTitleField;
            }
            set {
                this.projectTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string statusClass {
            get {
                return this.statusClassField;
            }
            set {
                this.statusClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string submittedByFullname {
            get {
                return this.submittedByFullnameField;
            }
            set {
                this.submittedByFullnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string submittedByUsername {
            get {
                return this.submittedByUsernameField;
            }
            set {
                this.submittedByUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> submittedDate {
            get {
                return this.submittedDateField;
            }
            set {
                this.submittedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class SoapFilter {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapRow))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class FolderSoapRow {
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> createdOnField;
        
        private string descriptionField;
        
        private string idField;
        
        private string lastModifiedByField;
        
        private System.Nullable<System.DateTime> lastModifiedOnField;
        
        private string parentFolderIdField;
        
        private string pathField;
        
        private string projectIdField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastModifiedBy {
            get {
                return this.lastModifiedByField;
            }
            set {
                this.lastModifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastModifiedOn {
            get {
                return this.lastModifiedOnField;
            }
            set {
                this.lastModifiedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string parentFolderId {
            get {
                return this.parentFolderIdField;
            }
            set {
                this.parentFolderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class TrackerSoapRow : FolderSoapRow {
        
        private string lastEditedByFullnameField;
        
        private string lastEditedByUsernameField;
        
        private System.Nullable<System.DateTime> lastEditedDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastEditedByFullname {
            get {
                return this.lastEditedByFullnameField;
            }
            set {
                this.lastEditedByFullnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastEditedByUsername {
            get {
                return this.lastEditedByUsernameField;
            }
            set {
                this.lastEditedByUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastEditedDate {
            get {
                return this.lastEditedDateField;
            }
            set {
                this.lastEditedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public abstract partial class FolderSoapList {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class TrackerSoapList : FolderSoapList {
        
        private TrackerSoapRow[] dataRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public TrackerSoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ArtifactDependencySoapList {
        
        private ArtifactDependencySoapRow[] dataRowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ArtifactDependencySoapRow[] dataRows {
            get {
                return this.dataRowsField;
            }
            set {
                this.dataRowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ArtifactDependencySoapRow {
        
        private string descriptionField;
        
        private bool hasViewPermissionField;
        
        private string originIdField;
        
        private string originStatusField;
        
        private string originStatusClassField;
        
        private string originTitleField;
        
        private string targetIdField;
        
        private string targetStatusField;
        
        private string targetStatusClassField;
        
        private string targetTitleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool hasViewPermission {
            get {
                return this.hasViewPermissionField;
            }
            set {
                this.hasViewPermissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string originId {
            get {
                return this.originIdField;
            }
            set {
                this.originIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string originStatus {
            get {
                return this.originStatusField;
            }
            set {
                this.originStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string originStatusClass {
            get {
                return this.originStatusClassField;
            }
            set {
                this.originStatusClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string originTitle {
            get {
                return this.originTitleField;
            }
            set {
                this.originTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string targetId {
            get {
                return this.targetIdField;
            }
            set {
                this.targetIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string targetStatus {
            get {
                return this.targetStatusField;
            }
            set {
                this.targetStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string targetStatusClass {
            get {
                return this.targetStatusClassField;
            }
            set {
                this.targetStatusClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string targetTitle {
            get {
                return this.targetTitleField;
            }
            set {
                this.targetTitleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class SoapNamedValues {
        
        private string[] namesField;
        
        private string[] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] names {
            get {
                return this.namesField;
            }
            set {
                this.namesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(NoSuchRelationshipFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchQuerySyntaxFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(InvalidFilterFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectAlreadyExistsFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(WorkflowViolationFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DependencyViolationFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(InvalidOperationFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IllegalArgumentFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(VersionMismatchFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SystemFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PermissionDeniedFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(NoSuchObjectFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(InvalidSessionFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class NoSuchRelationshipFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class SearchQuerySyntaxFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class InvalidFilterFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ObjectAlreadyExistsFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class WorkflowViolationFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class DependencyViolationFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class InvalidOperationFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class IllegalArgumentFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class VersionMismatchFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class SystemFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class PermissionDeniedFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class NoSuchObjectFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class InvalidSessionFault : WebServiceFault {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactSoapDO))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerFieldSoapDO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public abstract partial class ObjectSoapDO {
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> createdDateField;
        
        private string idField;
        
        private string lastModifiedByField;
        
        private System.Nullable<System.DateTime> lastModifiedDateField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lastModifiedBy {
            get {
                return this.lastModifiedByField;
            }
            set {
                this.lastModifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapDO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public abstract partial class FolderSoapDO : ObjectSoapDO {
        
        private string descriptionField;
        
        private string parentFolderIdField;
        
        private string pathField;
        
        private string projectIdField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string parentFolderId {
            get {
                return this.parentFolderIdField;
            }
            set {
                this.parentFolderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class TrackerSoapDO : FolderSoapDO {
        
        private SoapNamedValues assignmentsField;
        
        private string autoAssignFieldField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SoapNamedValues assignments {
            get {
                return this.assignmentsField;
            }
            set {
                this.assignmentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string autoAssignField {
            get {
                return this.autoAssignFieldField;
            }
            set {
                this.autoAssignFieldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactSoapDO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ItemSoapDO : ObjectSoapDO {
        
        private string folderIdField;
        
        private string pathField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
    public partial class ArtifactSoapDO : ItemSoapDO {
        
        private int actualHoursField;
        
        private string assignedToField;
        
        private string categoryField;
        
        private System.Nullable<System.DateTime> closeDateField;
        
        private string customerField;
        
        private string descriptionField;
        
        private int estimatedHoursField;
        
        private SoapFieldValues flexFieldsField;
        
        private string groupField;
        
        private int priorityField;
        
        private string reportedReleaseIdField;
        
        private string resolvedReleaseIdField;
        
        private string statusField;
        
        private string statusClassField;
        
        /// <remarks/>
        public int actualHours {
            get {
                return this.actualHoursField;
            }
            set {
                this.actualHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string assignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> closeDate {
            get {
                return this.closeDateField;
            }
            set {
                this.closeDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int estimatedHours {
            get {
                return this.estimatedHoursField;
            }
            set {
                this.estimatedHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SoapFieldValues flexFields {
            get {
                return this.flexFieldsField;
            }
            set {
                this.flexFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string reportedReleaseId {
            get {
                return this.reportedReleaseIdField;
            }
            set {
                this.reportedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string resolvedReleaseId {
            get {
                return this.resolvedReleaseIdField;
            }
            set {
                this.resolvedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string statusClass {
            get {
                return this.statusClassField;
            }
            set {
                this.statusClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFieldsCompletedEventHandler(object sender, getFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerFieldSoapDO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerFieldSoapDO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void copyWorkflowTransitionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createArtifactCompletedEventHandler(object sender, createArtifactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createArtifactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createArtifactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getArtifactDataCompletedEventHandler(object sender, getArtifactDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getArtifactDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getArtifactDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setArtifactDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getTrackerDataCompletedEventHandler(object sender, getTrackerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setTrackerDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void addDateFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteArtifactCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void moveArtifactCompletedEventHandler(object sender, moveArtifactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveArtifactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveArtifactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getParentDependencyListCompletedEventHandler(object sender, getParentDependencyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getParentDependencyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getParentDependencyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactDependencySoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactDependencySoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getChildDependencyListCompletedEventHandler(object sender, getChildDependencyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChildDependencyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChildDependencyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactDependencySoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactDependencySoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createTrackerCompletedEventHandler(object sender, createTrackerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTrackerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTrackerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerSoapDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerSoapDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getTrackerListCompletedEventHandler(object sender, getTrackerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrackerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrackerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrackerSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrackerSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void addTextFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void addSingleSelectFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void addMultiSelectFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void addUserSelectFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getArtifactListCompletedEventHandler(object sender, getArtifactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getArtifactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getArtifactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getArtifactDetailListCompletedEventHandler(object sender, getArtifactDetailListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getArtifactDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getArtifactDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactDetailSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactDetailSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void findArtifactsCompletedEventHandler(object sender, findArtifactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findArtifactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findArtifactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArtifactSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArtifactSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAllowedWorkflowTransitionListCompletedEventHandler(object sender, getAllowedWorkflowTransitionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllowedWorkflowTransitionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllowedWorkflowTransitionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkflowTransitionSoapList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkflowTransitionSoapList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createArtifactDependencyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void removeArtifactDependencyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591